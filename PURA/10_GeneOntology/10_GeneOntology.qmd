---
title: "GeneOntology"
date: "`r format(Sys.time(), '%d %B, %Y')`"
author:
  - name: Melina Klostermann
format: 
  html:
    code-fold: true
    code-overflow: scroll
    code-summary: "Show code"
    code-tools: true
    code-line-numbers: true
    
    toc: true
    toc-depth: 3
    toc-location: left
    toc-expand: false
    number-sections: true
    
    theme: sandstone
    fontsize: 11pt
    linestretch: 1.5
        
    fig-format: svg
    cap-location: margin
    crossref:
      fig-title: Fig
    
    embed-resources: true
    link-external-newwindow: true
    smooth-scroll: true
    
    execute:
      echo: true
      warning: false
---



```{r setup, include=FALSE}
require("knitr")
knitr::opts_chunk$set(warning=FALSE, message=FALSE, cache=TRUE, tidy.opts=list(width.cutoff=80))

library(ggplot2) 
source("/Users/melinaklostermann/Documents/projects/R_general_functions/theme_thesis.R")
theme_set(theme_thesis())
```


```{r libraries, include=FALSE, eval = T}
library(tidyverse)
library(ggpubr)
library(hypeR)



outpath <- "/Users/melinaklostermann/Documents/projects/Thesis/Thesis_code/PURA/11_GeneOntology/"
``` 

# Files
```{r}
rnaseq <- readRDS("/Users/melinaklostermann/Documents/projects/PURA/Molitor-et-al-2022/deseq.rds")
proteomics <-  readRDS("/Users/melinaklostermann/Documents/projects/PURA/Molitor-et-al-2022/proteomics_deqms.rds")

```

# What was done?

GeneOntology and Reactome enrichment analysis of RNAseq and proteomics results.

# GeneOntology & REACTOME

## RNAseq

```{r}

reactome_geneset <- msigdb_gsets("Homo sapiens", "C2", "CP:REACTOME")
cell_comp_geneset <- msigdb_gsets("Homo sapiens", "C5", "CC")


res_sig_kd <- rnaseq[which(rnaseq$padj < 0.01),]

bg = rnaseq[rnaseq$baseMean>0,]$hgnc_symbol

hyps_reactome <-  hypeR(res_sig_kd$hgnc_symbol, reactome_geneset, test="hypergeometric", fdr=0.05, background = bg) 
hyps_cell_comp <- hypeR(res_sig_kd$hgnc_symbol, cell_comp_geneset, test="hypergeometric", fdr=0.05, background = bg) 

hyps_list <- c(hyps_reactome, hyps_cell_comp)
names(hyps_list) <- c(1:2)
title_list <- c("Reactome: RNAseq PURA kd",
                "GO-CC RNAseq PURA kd")



##########################
# customise reactome for paper
#########################

reactome_go_cust  = hyps_list[[1]]$data %>%
  arrange(fdr) %>% 
  mutate(label = tolower(label) %>% 
           str_replace_all(., "_", " ") %>%
           str_replace_all(., "reactome", "") %>%
           str_to_sentence(),
         generatio = overlap/geneset) %>%
  as.data.frame()

xlsx::write.xlsx(reactome_go_cust, file =  paste0(outpath, "reactome_rnaseq_table.xlsx"))

reactome_go_cust <- reactome_go_cust[1:20,]

ggplot(reactome_go_cust, aes(y = generatio, x = factor(label, level = rev(unique(label)))))+
  geom_col()+
  coord_flip()+
  theme_thesis()+
  scale_fill_manual(values = c('darkgrey'))+
  #scale_fill_steps(low = "blue", high = "grey", n.breaks = 20)+
  scale_size(range = c(1, 3))

ggsave(paste0(outpath, Sys.Date(), "reactome_rnaseq_paper.pdf"), width = 17, height = 8, units = "cm")


##########################
# customise cellular components for paper
#########################

cc_go_cust  = hyps_list[[2]]$data %>%
  arrange(fdr) %>% 
  mutate(label = tolower(label) %>% 
           str_replace_all(., "_", " ") %>%
           str_replace_all(., "gocc", "") %>%
           str_to_sentence(),
         generatio = overlap/geneset) %>%
  as.data.frame()

xlsx::write.xlsx(reactome_go_cust, file =  paste0(outpath, "go_cellular_components_rnaseq_table.xlsx"))

cc_go_cust <- cc_go_cust[1:20,]

ggplot(cc_go_cust, aes(y = generatio, x = factor(label, level = rev(unique(label)))))+
  geom_col()+
  coord_flip()+
  theme_thesis()+
  scale_fill_manual(values = c('darkgrey'))+
  #scale_fill_steps(low = "blue", high = "grey", n.breaks = 20)+
  scale_size(range = c(1, 3))

ggsave(paste0(outpath, Sys.Date(), "cc_go_rnaseq_paper.pdf"), width = 17, height = 8, units = "cm")

```


## proteomics

```{r}

prot_sig_kd <- proteomics[which(proteomics$sca.adj.pval < 0.05),]

bg <- proteomics$gene_name

hyps_reactome <-  hypeR(prot_sig_kd$gene_name, reactome_geneset, test="hypergeometric", background = bg) 
hyps_cell_comp <- hypeR(prot_sig_kd$gene_name, cell_comp_geneset, test="hypergeometric", background = bg) 


hyps_list <- c(hyps_reactome, hyps_cell_comp)



##########################
# customise reactome for paper
#########################

reactome_go_cust  = hyps_list[[1]]$data %>%
  arrange(fdr) %>% 
  subset(fdr < 0.05) %>%
  mutate(label = tolower(label) %>% 
           str_replace_all(., "_", " ") %>%
           str_replace_all(., "reactome", "") %>%
           str_to_sentence(),
         generatio = overlap/geneset) %>%
  as.data.frame()

xlsx::write.xlsx(reactome_go_cust, file =  paste0(outpath, "reactome_proteomics_table.xlsx"))

reactome_go_cust <- reactome_go_cust[1:20,]

ggplot(reactome_go_cust, aes(y = generatio, x = factor(label, level = rev(unique(label)))))+
  geom_col()+
  coord_flip()+
  theme_thesis()+
  scale_fill_manual(values = c('darkgrey'))+
  #scale_fill_steps(low = "blue", high = "grey", n.breaks = 20)+
  scale_size(range = c(1, 3))

ggsave(paste0(outpath, Sys.Date(), "reactome_proteomics_paper.pdf"), width = 17, height = 8, units = "cm")


##########################
# customise cellular components for paper
#########################

cc_go_cust  = hyps_list[[2]]$data %>%
  arrange(fdr) %>% 
  subset(fdr < 0.05) %>%
  mutate(label = tolower(label) %>% 
           str_replace_all(., "_", " ") %>%
           str_replace_all(., "gocc", "") %>%
           str_to_sentence(),
         generatio = overlap/geneset) %>%
  as.data.frame()

xlsx::write.xlsx(reactome_go_cust, file =  paste0(outpath, "go_cellular_components_proteomics_table.xlsx"))

cc_go_cust <- cc_go_cust[1:20,]

ggplot(cc_go_cust, aes(y = generatio, x = factor(label, level = rev(unique(label)))))+
  geom_col()+
  coord_flip()+
  theme_thesis()+
  scale_fill_manual(values = c('darkgrey'))+
  #scale_fill_steps(low = "blue", high = "grey", n.breaks = 20)+
  scale_size(range = c(1, 3))

ggsave(paste0(outpath, Sys.Date(), "cc_go_proteomics_paper.pdf"), width = 17, height = 8, units = "cm")

```
